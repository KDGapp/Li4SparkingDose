export type Language = 'English' | 'Indonesian' | 'Spanish' | 'French' | 'German';

// FIX: Extracted the English translations into a separate const to break the circular type dependency
// where `TranslationKey` depended on `translations` and `translations` depended on `TranslationKey`.
const englishTranslations = {
  apiKeyError: 'Please enter your Google AI API Key to generate posts.',
  topicError: 'Please enter a topic.',
  unexpectedError: 'An unexpected error occurred. Please try again.',
  systemError: 'SYSTEM ERROR:',
  generatingPosts: 'ANALYZING... GENERATING POSTS...',
  appDescription: 'Enter a topic and our AI will generate profound, poetic, and thought-provoking statements, designed to inspire reflection and resonate deeply with your audience.',
  appSlogan: 'Sparking Contemplation...',
  topicPlaceholder: "e.g., 'AI consciousness' or 'Cyberpunk fashion'",
  processing: 'Processing...',
  generate: 'Generate',
  styleDeepMetaphor: 'Deep Metaphor',
  styleSimpleElegant: 'Simple & Elegant',
  styleSimpleTruth: 'Simple Truth',
  styleProvocativeParable: 'Provocative Parable',
  styleInsightfulQuestion: 'Insightful Question',
  selectWritingStyle: 'Select writing style',
  copied: 'COPIED',
  copy: 'COPY',
  createImage: 'CREATE IMAGE',
  copyFail: 'Failed to copy text to clipboard.',
  shareThisAI: 'SHARE THIS AI',
  shareOnTwitter: 'Share on Twitter',
  shareOnFacebook: 'Share on Facebook',
  shareOnWhatsApp: 'Share on WhatsApp',
  visitTikTok: 'Visit TikTok',
  apiKeyLabel: 'Enter Your API Key to Activate the AI',
  apiKeyPlaceholder: 'Enter your Google AI API Key',
  getApiKey: 'Get API Key',
  hideApiKey: 'Hide API Key',
  showApiKey: 'Show API Key',
  imageEditorTitle: 'IMAGE EDITOR_',
  background: 'Background',
  uploadImage: 'Upload Image',
  generateWithAI: 'Generate with AI',
  generating: 'Generating...',
  apiKeyTooltip: 'Please enter your API key to use AI generation.',
  generateTooltip: 'Generate a background image using AI',
  aspectRatio: 'Aspect Ratio',
  aspectSquare: 'Square (1:1)',
  aspectPortrait: 'Portrait (4:5)',
  aspectLandscape: 'Landscape (16:9)',
  aspectStory: 'Story (9:16)',
  opacity: 'Opacity',
  blur: 'Blur',
  bannerTemplates: 'Banner Templates',
  text: 'Text',
  fontFamily: 'Font Family',
  color: 'Color',
  fontSize: 'Font Size',
  vPosition: 'V-Position',
  alignment: 'Alignment',
  outline: 'Outline',
  width: 'Width',
  download: 'Download',
  share: 'Share',
  sharing: 'Sharing...',
  shareFailed: 'Failed',
  shareFailMessage: 'Sharing failed. Your browser may not be supported.',
  uploadPlaceholderTitle: 'UPLOAD OR GENERATE IMAGE',
  uploadPlaceholderSubtitle: 'Click to upload or use the AI generator',
  imageGenError: 'An unknown error occurred during image generation.',
  templateNeon: 'Neon Glow',
  templateElegant: 'Elegant',
  templateBold: 'Bold News',
};

// FIX: TranslationKey is now derived from the static `englishTranslations` object, resolving the circular reference.
export type TranslationKey = keyof typeof englishTranslations;

// Add more languages here, for now they will default to English
const translations: Record<string, Partial<Record<TranslationKey, string>>> = {
  English: englishTranslations,
  Indonesian: {
    apiKeyError: 'Silakan masukkan Kunci API Google AI Anda untuk membuat postingan.',
    topicError: 'Silakan masukkan topik.',
    unexpectedError: 'Terjadi kesalahan tak terduga. Silakan coba lagi.',
    systemError: 'KESALAHAN SISTEM:',
    generatingPosts: 'MENGANALISIS... MEMBUAT POSTINGAN...',
    appDescription: 'Masukkan topik dan AI kami akan menghasilkan pernyataan yang mendalam, puitis, dan menggugah pikiran, yang dirancang untuk menginspirasi refleksi dan beresonansi secara mendalam dengan audiens Anda.',
    appSlogan: 'Memicu Kontemplasi...',
    topicPlaceholder: "contoh, 'Kesadaran AI' atau 'Mode Cyberpunk'",
    processing: 'Memproses...',
    generate: 'Buat',
    styleDeepMetaphor: 'Metafora Mendalam',
    styleSimpleElegant: 'Sederhana & Elegan',
    styleSimpleTruth: 'Kebenaran Sederhana',
    styleProvocativeParable: 'Perumpamaan Provokatif',
    styleInsightfulQuestion: 'Pertanyaan Berwawasan',
    selectWritingStyle: 'Pilih gaya penulisan',
    copied: 'TERSALIN',
    copy: 'SALIN',
    createImage: 'BUAT GAMBAR',
    copyFail: 'Gagal menyalin teks ke papan klip.',
    shareThisAI: 'BAGIKAN AI INI',
    shareOnTwitter: 'Bagikan di Twitter',
    shareOnFacebook: 'Bagikan di Facebook',
    shareOnWhatsApp: 'Bagikan di WhatsApp',
    visitTikTok: 'Kunjungi TikTok',
    apiKeyLabel: 'Masukkan Kunci API Anda untuk Mengaktifkan AI',
    apiKeyPlaceholder: 'Masukkan Kunci API Google AI Anda',
    getApiKey: 'Dapatkan Kunci API',
    hideApiKey: 'Sembunyikan Kunci API',
    showApiKey: 'Tampilkan Kunci API',
    imageEditorTitle: 'EDITOR GAMBAR_',
    background: 'Latar Belakang',
    uploadImage: 'Unggah Gambar',
    generateWithAI: 'Buat dengan AI',
    generating: 'Membuat...',
    apiKeyTooltip: 'Silakan masukkan kunci API Anda untuk menggunakan pembuatan AI.',
    generateTooltip: 'Buat gambar latar belakang menggunakan AI',
    aspectRatio: 'Rasio Aspek',
    aspectSquare: 'Persegi (1:1)',
    aspectPortrait: 'Potret (4:5)',
    aspectLandscape: 'Lanskap (16:9)',
    aspectStory: 'Cerita (9:16)',
    opacity: 'Opasitas',
    blur: 'Buram',
    bannerTemplates: 'Template Banner',
    text: 'Teks',
    fontFamily: 'Jenis Huruf',
    color: 'Warna',
    fontSize: 'Ukuran Huruf',
    vPosition: 'Posisi-V',
    alignment: 'Perataan',
    outline: 'Garis Luar',
    width: 'Lebar',
    download: 'Unduh',
    share: 'Bagikan',
    sharing: 'Membagikan...',
    shareFailed: 'Gagal',
    shareFailMessage: 'Gagal berbagi. Browser Anda mungkin tidak mendukung.',
    uploadPlaceholderTitle: 'UNGGAH ATAU BUAT GAMBAR',
    uploadPlaceholderSubtitle: 'Klik untuk mengunggah atau gunakan generator AI',
    imageGenError: 'Terjadi kesalahan yang tidak diketahui saat pembuatan gambar.',
    templateNeon: 'Cahaya Neon',
    templateElegant: 'Elegan',
    templateBold: 'Berita Tebal',
  },
};

const defaultLang = 'English';
const supportedLangs: Language[] = ['English', 'Indonesian', 'Spanish', 'French', 'German'];

supportedLangs.forEach(lang => {
  if (lang !== defaultLang && !translations[lang]) {
    translations[lang] = translations[defaultLang];
  }
});


export const useTranslations = (lang: Language) => {
    return (key: TranslationKey): string => {
        const langTranslations = translations[lang] || translations[defaultLang];
        return langTranslations?.[key] || key;
    };
};
